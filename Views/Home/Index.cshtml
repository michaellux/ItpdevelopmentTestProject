@model Tuple<IEnumerable<Project>, IEnumerable<ItpdevelopmentTestProject.Models.Task>, IEnumerable<Project>>
@using FormHelper
@addTagHelper *, FormHelper
@{
    ViewData["Title"] = "Projects";
    ViewData["FilterButton"] = "Filter";
    ViewData["CreateProject"] = "Create project";
    ViewData["CreateTask"] = "Create task";
    ViewData["CreateButton"] = "Create";
    ViewData["Description"] = "Descriptions";

    var projectModel = Model.Item1;
    var taskModel = Model.Item2;
    var filteredProjectsModel = Model.Item3;
    var filteredProject = filteredProjectsModel.First();
}

<div id="app" class="project pt-4">
    <h1 class="display-4 main__title">@ViewData["Title"]</h1>
    <button type="button" class="btn btn-info main__create" data-bs-toggle="modal" data-bs-target="#createProjectModal">
        @ViewData["CreateProject"]
    </button>
    <button type="button" class="btn btn-primary main__create" data-bs-toggle="modal" data-bs-target="#createTaskModal">
        @ViewData["CreateTask"]
    </button>
    <form class="mb-3" asp-controller="Home" asp-action="FilterProjects" method="post">
        <div class="form-row">
            <div class="col-3">
                <label class="form-label">Project</label>
                <select name="Id" class="form-control">
                    @{
                        var conditionAllSelected = @ViewData["id"] == null;
                    }
                    <option value="" selected="@conditionAllSelected">All</option>
                    @foreach (var project in projectModel)
                    {
                        var conditionProjectSelected = project.Id == filteredProject.Id;

                        if (conditionAllSelected) {
                             <option value="@project.Id">@project.ProjectName</option>
                        }
                        else {
                             <option value="@project.Id" selected="@conditionProjectSelected">@project.ProjectName</option>
                        }
                    }
                </select>
            </div>
            <div class="col">
                <button class="btn btn-primary">@ViewData["FilterButton"]</button>
            </div>
        </div>
    </form>

@*    <vue-project class="mb-4" id="4" total="34" ref="project">

    </vue-project>*@




@*    @foreach (var project in filteredProjectsModel)
    {*@
        
@*        List<TimeSpan> periods = new();

        foreach (var item in project.Tasks)
        {
            periods.Add(item.Period);
        }

        TimeSpan totalPeriod = periods.Aggregate(TimeSpan.Zero, (subtotal, t) => subtotal.Add(t));
        string final = string.Format("{0:dd\\.hh\\:mm\\:ss} days", totalPeriod);
      
     

        var name = project.ProjectName;*@
        <vue-project v-for="project in projects" :id="project" total="34" ref="project">
                
        </vue-project>
    }
</div>



<!-- Модальное окно -->
<div class="modal fade" id="createTaskModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">@ViewData["CreateTask"]</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Закрыть"></button>
            </div>
            <div class="modal-body">
                <div asp-validation-summary="ModelOnly"></div>
                <form asp-callback="CallBack" enctype="multipart/form-data" asp-formhelper="true" asp-controller="Home" asp-action="Index">
                    <div class="mb-3">
                        @Html.Label("Name", "Name", new { @class= "form-label" })
                        @Html.TextBox("Name","", new { type="text", @class="form-control" })
                    </div>
                    <div class="mb-3">
                        @Html.Label("Project", "Project", new { @class= "form-label" })
                        <select name="Project" class="form-control">
                            <option value="" disabled selected>Select your option</option>
                            @foreach (var project in projectModel)
                            {
                                <option value="@project.Id">@project.ProjectName</option>
                            }
                        </select>
                    </div>
                    <div class="mb-3">
                        @Html.Label("StartTime", "Start time", new { @class= "form-label" })
                        @Html.EditorFor(Model => Model.Item2.First().StartDate, new { htmlAttributes = new { @class = "form-control" }})
                    </div>
                    <div class="mb-3">
                        @Html.Label("EndTime", "End time", new { @class= "form-label" })
                        @Html.EditorFor(Model => Model.Item2.First().CancelDate, new { htmlAttributes = new { @class = "form-control" }})
                    </div>
                    <div class="mb-3">
                        <label class="form-label">@ViewData["Description"]</label>
                        <div id="createDescriptionFieldButtons">
                            <input value="Add text" type="button" id="createTextDescriptionField" class="btn btn-outline-secondary btn-sm"/>
                            <input value="Add file" type="button" id="createFileField" class="btn btn-outline-secondary btn-sm"/>
                        </div>
                        <div id="descriptions-block">

                        </div>
                        <script>
                            let descriptionFieldBlock = document.getElementById("descriptions-block");
                            const createDescriptionBlock = () => {
                                let descriptionField = document.createElement("input");
                                descriptionField.classList.add('mt-3');
                                descriptionField.classList.add('mb-3');
                                descriptionField.classList.add('form-control');

                                return descriptionField;
                            }

                            document.getElementById("createTextDescriptionField").addEventListener("click", function () {
                                let descriptionField = createDescriptionBlock();
                                descriptionField.classList.add('description__textfield');
                                let textDescriptionFieldCount = document.getElementsByClassName("description__textfield").length;
                                descriptionField.setAttribute('name', `TextContent[${textDescriptionFieldCount}]`);
                                descriptionFieldBlock.prepend(descriptionField);

                            });

                            document.getElementById("createFileField").addEventListener("click", function () {
                                let descriptionField = createDescriptionBlock();
                                descriptionField.setAttribute('type', 'file');
                                descriptionField.classList.add('description__filefield');
                                let textDescriptionFieldCount = document.getElementsByClassName("description__filefield").length;
                                descriptionField.setAttribute('name', `FileContent[${textDescriptionFieldCount}]`);
                                descriptionFieldBlock.prepend(descriptionField);
                            });
                        </script>
                    </div>
                    <p>
                        <button class="btn btn-primary">@ViewData["CreateButton"]</button>
                    </p>
                </form>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="createProjectModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">@ViewData["CreateProject"]</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Закрыть"></button>
            </div>
            <div class="modal-body">
                <div asp-validation-summary="ModelOnly"></div>
                <form asp-formhelper="true" asp-controller="Home" asp-action="ProjectForm">
                    <div class="mb-3">
                        @Html.Label("Name", "Name", new { @class= "form-label" })
                        @Html.TextBox("Name","", new { type="text", @class="form-control" })
                    </div>
                    <p>
                        <button class="btn btn-primary">@ViewData["CreateButton"]</button>
                    </p>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let projects = [];
    </script>


    @{
        var index = 0;
    }
    @foreach (var project in filteredProjectsModel)
    {
        <script>
            projects = [...projects, "@project.Id"];
            localStorage.setItem(@index.ToString(), "@project.Id");
        </script>
        index++;
    }

    <partial name="_Project" />

    <script type="text/javascript">
        var app = new Vue({
            el: '#app',
            props: {
                projects: null
            },
            mounted() {
                this.projects = projects
            }
        })

        function CallBack(response) {
            if (response.isSucceed)
            {
                app.$refs.project.forEach(item => item.update());
            }
        }
    </script>
}
