@model IEnumerable<ItpdevelopmentTestProject.Models.Project>;
@{
    ViewData["Title"] = "Projects";
    ViewData["Number in order"] = "#";
    ViewData["Description of the task. It can be either a file or just a text field, provide for switching."] = "Description";
}
<style>
    section.project {
        margin-bottom: 3rem;
        border: 1px solid #cfbfbf;
        padding: 2rem;
    }

    .created {
        margin-bottom: 0rem;
    }
</style>
<script type="text/javascript">
    Vue.component('vue-project', {
        props: {
            id: String,
        },
        data() {
            return {
                project: null,
            }
        },
        mounted() {
            this.getProject(this.id).then((data) => {
               this.project = data;
            });

        },
        methods: {
            async getProject(id)
            {
                const res = await fetch('/Home/GetProject?id=' + id);
                const project = await res.json();
                return project;
            },
        },
        template: '#vue-project-template'
    });
    Vue.component('vue-task', {
        props: {
            task: Object,
            order: Number,
            times: null
        },
        mounted() {
            this.getTask(this.id).then((data) => {
                this.task = data;
            })
            
        },
        methods: {
            async getTask(id) {
                const res = await fetch('/Home/GetTask?id=' + id);
                const task = await res.json();
                return task;
            },
        },
        template: '#vue-task-template'
    });
    Vue.component('vue-comment', {
        props: {
            comment: Object,
        },
        template: '#vue-comment-template'
    });

</script>
<script type="text/template" id="vue-project-template">    
     <section class="project">
        <h2 v-if="id">{{project.ProjectName}}</h2>
        <p class="created">Created: {{project.CreateDateTime}}</p>
         <p class="updated">Updated: {{project.UpdateDateTime}}</p>
            @{
                var task = Model.First().Tasks.First();
            }
           <table class="table table-striped">
               <thead>
                   <tr>
                       <th>
                            @ViewData["Number in order"]
                       </th>
                       <th>
                            @Html.DisplayNameFor(project => task.SpentTime)
                       </th>
                       <th>
                            @Html.DisplayNameFor(project => task.TaskName)
                       </th>
                       <th>
                            @ViewData["Description of the task. It can be either a file or just a text field, provide for switching."]
                       </th>
                       <th>
                            @Html.DisplayNameFor(project => task.StartDate)
                       </th>
                       <th>
                            @Html.DisplayNameFor(project => task.CancelDate)
                       </th>
                   </tr>
               </thead>
               <tbody>
                     <vue-task v-for="(task, index) in project.Tasks" :task="task" :order="++index">

                      </vue-task>
               </tbody>
           </table>
           <a asp-action="Create">Create new Task</a>
     </section>
</script>

<script type="text/template" id="vue-task-template">
    <tr>
        <td>
            {{order}}
        </td>
        <td>
            {{task.SpentTime}}
        </td>
        <td>
            {{task.TaskName}}
        </td>
        <td>
            <vue-comment v-for="(comment, index) in task.TaskComments" :comment="comment">

            </vue-comment>
        </td>
        <td>
            {{task.StartTime}}
        </td>
        <td v-if="task.CancelDate">
            {{task.EndTime}}
        </td>
        <td v-else>
            00:00
        </td>
    </tr>
</script>

<script type="text/template" id="vue-comment-template">
    <p v-if="comment.CommentType == 1">
        {{comment.Description}}
    </p>
    <p v-else-if="comment.CommentType == 2">
        <a :href="comment.Description">Attachment</a>
    </p>
</script>
